//Set the dimensions of the canvas graph.
var margin = {top: 20, right: 30, bottom: 30, left: 40},
width = 800 - margin.left - margin.right,
height = 400 - margin.top - margin.bottom;



//Add the svg canvas
var chart1 = d3.select("body")
  .append("svg")
  .attr("class","chart1")
  .attr("width", width + margin.left + margin.right)
  .attr("height", height + margin.top + margin.bottom)
  .append("g")
  .attr("transform","translate(" + margin.left + "," + margin.top +  ")");

//Define the bar and barHeight
var barHeight = 5;


//Get the data
d3.json('resources/commercial.json',function(err,data){

  if(err)
    console.error(err);
  var crops =[];
  var unit = data[0].Unit;
  data.forEach(function(d){
    if(d["3-2013"]=="NA" || d["3-2013"]==null)
    d["3-2013"] =0;     //Replace NA with null.
    else
    d["3-2013"] =+d["3-2013"];    //Convert to number using unary +

    crops.push(+d["3-2013"]);

  })


  //Set the ranges.

  var y = d3.scale.linear()
          .domain([0,d3.max(crops)+10])
          .range([0,width]);

var y = d3.scale.linear().range([height, 0]);

x.domain(data.map(function(d) { return d.Particulars.replace("Agricultural Production Commercial Crops",""); }));
y.domain([0, d3.max(data, function(d) { return d["3-2013"]; })]);


  //Define the axes
  var xAxis = d3.svg.axis()
  .ticks(15)
  .scale(x)
  .orient("bottom");


  var yAxis = d3.svg.axis()
      .scale(y)
      .orient("left")
      .ticks(10);


  var bar = chart1.selectAll("g")
  .data(data)
  .enter().append("g")
  .attr("transform", function(d, i) { return "translate(0," + i * barHeight + ")"; })

  //Add the bars

  bar.append("rect")
  .attr("height", function(d){ return y(d["3-2013"]);})
  .attr("width", barHeight - 1);



  chart1.append("g")
      .attr("class", "x axis")
      .attr("transform", "translate(0," + height + ")")
      .call(xAxis)
    .selectAll("text")
      .style("text-anchor", "end")
      .attr("dx", "-.8em")
      .attr("dy", "-.55em")
      .attr("transform", "rotate(-90)" );

  chart1.append("g")
      .attr("class", "y axis")
      .call(yAxis)
    .append("text")
      .attr("transform", "rotate(-90)")
      .attr("y", 6)
      .attr("dy", ".71em")
      .style("text-anchor", "end")
      .text(unit);


  chart1.selectAll("g")
      .data(data)
      .enter().append("text")
      .attr("y", barHeight / 2)
      .attr("dy", ".35em")

      .text(function(d) { return d.Particulars; });

});

var chart2 = d3.select("body")
  .append("svg")
  .attr("class","chart1")
  .attr("width", width + margin.left + margin.right)
  .attr("height", height + margin.top + margin.bottom)
  .append("g")
  .attr("transform","translate(" + margin.left + "," + margin.top +  ")");


d3.json('resources/oilseeds.json', function(err, data){

  if(err)
    console.error(err);
  var crops =[];

  data.forEach(function(d){
    if(d["3-2013"]=="NA" || d["3-2013"]==null)
    d["3-2013"] =0;     //Replace NA with null.
    else
    d["3-2013"] =+d["3-2013"];    //Convert to number using unary +

    crops.push(+d["3-2013"]);

  })


  //Set the ranges.

  var x = d3.scale.linear()
          .domain([0,d3.max(crops)+10])
          .range([0,width]);




  //Define the axes
  var xAxis = d3.svg.axis()
  .ticks(15)
  .scale(x)
  .orient("bottom");

  var bar = chart2.selectAll("g")
  .data(data)
  .enter().append("g")
  .attr("transform", function(d, i) { return "translate(0," + i * barHeight + ")"; })

  //Add the bars

  bar.append("rect")
  .attr("width", function(d){return x(d["3-2013"]);})
  .attr("height", barHeight - 1);

  //Add the x axis
  chart2.append("g")

        .attr("transform", "translate(0," + (crops.length * (barHeight+2))  + ")")
        .call(xAxis);


});
